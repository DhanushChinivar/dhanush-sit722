name: CI Pipeline - Test, Build & Push to ACR

on:
  push:
    branches:
      - testing   # Pipeline runs only when pushing to "testing" branch

jobs:
  test-build-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Node.js for tests
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # Step 3: Run frontend tests (skip if no package.json)
      - name: Run tests for frontend
        run: |
          if [ -f ./frontend/package.json ]; then
            cd frontend
            npm install
            npm test || echo "No frontend tests found"
            cd ..
          else
            echo "No frontend package.json found, skipping tests."
          fi

      # Step 4: Run backend tests (skip if no package.json)
      - name: Run tests for backend
        run: |
          if [ -f ./backend/package.json ]; then
            cd backend
            npm install
            npm test || echo "No backend tests found"
            cd ..
          else
            echo "No backend package.json found, skipping tests."
          fi

      # Step 5: Login to Azure
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 6: Docker login to ACR
      - name: Docker login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
          password: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}

      # Step 7: Build & Push All Services (loop)
      - name: Build & Push Docker Images
        run: |
          for service in frontend backend product order customer; do
            if [ -d "./$service" ]; then
              IMAGE_NAME=${{ secrets.ACR_LOGIN_SERVER }}/$service:${{ github.sha }}
              echo "Building and pushing: $IMAGE_NAME"
              docker build -t $IMAGE_NAME ./$service
              docker push $IMAGE_NAME
            else
              echo "Directory $service not found, skipping."
            fi
          done
